# HTTP服务器 - 重定向到HTTPS
server {
    listen 80;
    server_name mikkocat.top www.mikkocat.top;
    return 301 https://$server_name$request_uri;
}

# HTTPS服务器
server {
    listen 443 ssl http2;
    server_name mikkocat.top www.mikkocat.top;
    root /usr/share/nginx/html;
    index index.html;

    # SSL配置 - 使用实际文件路径
    ssl_certificate /etc/letsencrypt/archive/mikkocat.top/fullchain1.pem;
    ssl_certificate_key /etc/letsencrypt/archive/mikkocat.top/privkey1.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # 允许更大的请求体（解决 413 Content Too Large）
    client_max_body_size 50M;

    # 静态文件代理 (必须在 / 之前)
    location /uploads/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API代理到后端 (必须在 / 之前)
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # 确保上传到API也不受限制
        client_max_body_size 50M;
        # 上游超时加长，避免大文件上传中断
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # 处理前端路由 (必须在最后)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 静态资源缓存 (排除uploads目录)
    location ~* ^(?!/uploads/).*\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
