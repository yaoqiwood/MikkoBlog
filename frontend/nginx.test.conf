# 测试环境 HTTP 服务器配置
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # 设置字符编码
    charset utf-8;

    # 添加响应头确保编码正确
    add_header Content-Type "text/html; charset=utf-8";

    # 允许更大的请求体
    client_max_body_size 50M;

    # 静态文件代理 (必须在 / 之前)
    location /uploads/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API代理到后端 (必须在 / 之前)
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # 确保上传到API也不受限制
        client_max_body_size 50M;
        # 上游超时加长，避免大文件上传中断
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # 处理前端路由 (必须在最后)
    location / {
        try_files $uri $uri/ /index.html;
        # 确保 HTML 文件正确设置 Content-Type
        add_header Content-Type "text/html; charset=utf-8";
    }

    # 静态资源缓存 (排除uploads目录)
    location ~* ^(?!/uploads/).*\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # 确保 HTML 文件正确设置 Content-Type
    location ~* \.html$ {
        add_header Content-Type "text/html; charset=utf-8";
    }

    # 处理 JSON 文件
    location ~* \.json$ {
        add_header Content-Type "application/json; charset=utf-8";
    }
}
